apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim
  labels:
  app.kubernetes.io/managed-by: Helm    
  helm.sh/release-name: {{ .Release.Name }}
  helm.sh/release-namespace: default
    
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.dbServer.serviceName }}  
  helm.sh/release-name: {{ .Release.Name }}
  helm.sh/release-namespace: default
spec:
  selector:
    app: mysql
  type: ClusterIP
  ports:
    - protocol: TCP
      port: {{ .Values.dbServer.port }}
      targetPort: 3306
      
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mysql   
  helm.sh/release-name: {{ .Release.Name }}
  helm.sh/release-namespace: default
  labels:
    app.kubernetes.io/managed-by: Helm
spec:
  serviceName: mysql-service
  replicas: 1
  selector:
    matchLabels:
      app: mysql
  template:
    metadata:
      labels:
        app: mysql
    spec:
      containers:
        - name: mysql
          image: mysql:8.0.33
          env:
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: MYSQL_DATABASE
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: MYSQL_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secrets
                  key: MYSQL_PASSWORD
          ports:
            - containerPort: {{ .Values.dbServer.port }}
              name: mysql
          volumeMounts:
            - name: mysql-data
              mountPath: /var/lib/mysql
      volumes:
        - name: mysql-data
          persistentVolumeClaim:
            claimName: mysql-pv-claim


---
apiVersion: v1
kind: Service
metadata:
  name: adminer-service
  helm.sh/release-name: {{ .Release.Name }}
  helm.sh/release-namespace: default
  annotations:
    dev.okteto.com/auto-ingress: "true"
spec:
  selector:
    app: adminer
  type: ClusterIP
  ports:
      - protocol: TCP
        port: 8080
        targetPort: 8080


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: adminer-deployment
  helm.sh/release-name: {{ .Release.Name }}
  helm.sh/release-namespace: default
  labels:
    app.kubernetes.io/managed-by: Helm 
    app: adminer
    
spec:
  replicas: 1
  selector:
    matchLabels:
      app: adminer
  template:
    metadata:
      labels:
        app: adminer
    spec:
      containers:
        - name: adminer
          image: adminer:4.8.1-standalone
          ports:
            - containerPort: 8080
              name: adminer

